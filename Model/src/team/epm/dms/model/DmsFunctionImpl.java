package team.epm.dms.model;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import team.epm.dms.common.DmsEntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 10 16:11:15 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DmsFunctionImpl extends DmsEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(DmsFunctionImpl obj) {
                return obj.getId();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setId((String)value);
            }
        }
        ,
        Locale {
            public Object get(DmsFunctionImpl obj) {
                return obj.getLocale();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setLocale((String)value);
            }
        }
        ,
        Description {
            public Object get(DmsFunctionImpl obj) {
                return obj.getDescription();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        Name {
            public Object get(DmsFunctionImpl obj) {
                return obj.getName();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        CreatedAt {
            public Object get(DmsFunctionImpl obj) {
                return obj.getCreatedAt();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setCreatedAt((Date)value);
            }
        }
        ,
        UpdatedAt {
            public Object get(DmsFunctionImpl obj) {
                return obj.getUpdatedAt();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setUpdatedAt((Date)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(DmsFunctionImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setUpdatedBy((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(DmsFunctionImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        Action {
            public Object get(DmsFunctionImpl obj) {
                return obj.getAction();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setAction((String)value);
            }
        }
        ,
        Parameters {
            public Object get(DmsFunctionImpl obj) {
                return obj.getParameters();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setParameters((String)value);
            }
        }
        ,
        Category {
            public Object get(DmsFunctionImpl obj) {
                return obj.getCategory();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setCategory((String)value);
            }
        }
        ,
        Seq {
            public Object get(DmsFunctionImpl obj) {
                return obj.getSeq();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setSeq((Number)value);
            }
        }
        ,
        PFunctionId {
            public Object get(DmsFunctionImpl obj) {
                return obj.getPFunctionId();
            }

            public void put(DmsFunctionImpl obj, Object value) {
                obj.setPFunctionId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DmsFunctionImpl object);

        public abstract void put(DmsFunctionImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int LOCALE = AttributesEnum.Locale.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int CREATEDAT = AttributesEnum.CreatedAt.index();
    public static final int UPDATEDAT = AttributesEnum.UpdatedAt.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int ACTION = AttributesEnum.Action.index();
    public static final int PARAMETERS = AttributesEnum.Parameters.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int SEQ = AttributesEnum.Seq.index();
    public static final int PFUNCTIONID = AttributesEnum.PFunctionId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DmsFunctionImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public String getId() {
        return (String)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Locale, using the alias name Locale.
     * @return the Locale
     */
    public String getLocale() {
        return (String)getAttributeInternal(LOCALE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locale.
     * @param value value to set the Locale
     */
    public void setLocale(String value) {
        setAttributeInternal(LOCALE, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for CreatedAt, using the alias name CreatedAt.
     * @return the CreatedAt
     */
    public Date getCreatedAt() {
        return (Date)getAttributeInternal(CREATEDAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedAt.
     * @param value value to set the CreatedAt
     */
    public void setCreatedAt(Date value) {
        setAttributeInternal(CREATEDAT, value);
    }

    /**
     * Gets the attribute value for UpdatedAt, using the alias name UpdatedAt.
     * @return the UpdatedAt
     */
    public Date getUpdatedAt() {
        return (Date)getAttributeInternal(UPDATEDAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedAt.
     * @param value value to set the UpdatedAt
     */
    public void setUpdatedAt(Date value) {
        setAttributeInternal(UPDATEDAT, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the UpdatedBy
     */
    public String getUpdatedBy() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Action, using the alias name Action.
     * @return the Action
     */
    public String getAction() {
        return (String)getAttributeInternal(ACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Action.
     * @param value value to set the Action
     */
    public void setAction(String value) {
        setAttributeInternal(ACTION, value);
    }

    /**
     * Gets the attribute value for Parameters, using the alias name Parameters.
     * @return the Parameters
     */
    public String getParameters() {
        return (String)getAttributeInternal(PARAMETERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Parameters.
     * @param value value to set the Parameters
     */
    public void setParameters(String value) {
        setAttributeInternal(PARAMETERS, value);
    }

    /**
     * Gets the attribute value for Category, using the alias name Category.
     * @return the Category
     */
    public String getCategory() {
        return (String)getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for Seq, using the alias name Seq.
     * @return the Seq
     */
    public Number getSeq() {
        return (Number)getAttributeInternal(SEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Seq.
     * @param value value to set the Seq
     */
    public void setSeq(Number value) {
        setAttributeInternal(SEQ, value);
    }

    /**
     * Gets the attribute value for PFunctionId, using the alias name PFunctionId.
     * @return the PFunctionId
     */
    public String getPFunctionId() {
        return (String)getAttributeInternal(PFUNCTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PFunctionId.
     * @param value value to set the PFunctionId
     */
    public void setPFunctionId(String value) {
        setAttributeInternal(PFUNCTIONID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param id key constituent
     * @param locale key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id, String locale) {
        return new Key(new Object[]{id, locale});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("team.epm.dms.model.DmsFunction");
        }
        return mDefinitionObject;
    }
}

package team.epm.dms.view;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import team.epm.dms.model.DmsUserImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 29 12:14:23 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DmsUserViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getId();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setId((String)value);
            }
        }
        ,
        Acc {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getAcc();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setAcc((String)value);
            }
        }
        ,
        Pwd {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getPwd();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setPwd((String)value);
            }
        }
        ,
        LockFlag {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getLockFlag();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setLockFlag((String)value);
            }
        }
        ,
        EnableFlag {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getEnableFlag();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setEnableFlag((String)value);
            }
        }
        ,
        RetryCount {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getRetryCount();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setRetryCount((Number)value);
            }
        }
        ,
        LockTime {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getLockTime();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setLockTime((Date)value);
            }
        }
        ,
        UpdatedAt {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getUpdatedAt();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setUpdatedAt((Date)value);
            }
        }
        ,
        CreatedAt {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getCreatedAt();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setCreatedAt((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setUpdatedBy((String)value);
            }
        }
        ,
        Name {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getName();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Sex {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getSex();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setSex((String)value);
            }
        }
        ,
        Mail {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getMail();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setMail((String)value);
            }
        }
        ,
        Locale {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getLocale();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setLocale((String)value);
            }
        }
        ,
        Phone {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getPhone();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setPhone((String)value);
            }
        }
        ,
        OtherInfo {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getOtherInfo();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setOtherInfo((String)value);
            }
        }
        ,
        LKUP_YES_NO {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getLKUP_YES_NO();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LKUP_DMS_SEX {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getLKUP_DMS_SEX();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LKUP_DMS_LANGUAGE {
            public Object get(DmsUserViewRowImpl obj) {
                return obj.getLKUP_DMS_LANGUAGE();
            }

            public void put(DmsUserViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DmsUserViewRowImpl object);

        public abstract void put(DmsUserViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int ACC = AttributesEnum.Acc.index();
    public static final int PWD = AttributesEnum.Pwd.index();
    public static final int LOCKFLAG = AttributesEnum.LockFlag.index();
    public static final int ENABLEFLAG = AttributesEnum.EnableFlag.index();
    public static final int RETRYCOUNT = AttributesEnum.RetryCount.index();
    public static final int LOCKTIME = AttributesEnum.LockTime.index();
    public static final int UPDATEDAT = AttributesEnum.UpdatedAt.index();
    public static final int CREATEDAT = AttributesEnum.CreatedAt.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int SEX = AttributesEnum.Sex.index();
    public static final int MAIL = AttributesEnum.Mail.index();
    public static final int LOCALE = AttributesEnum.Locale.index();
    public static final int PHONE = AttributesEnum.Phone.index();
    public static final int OTHERINFO = AttributesEnum.OtherInfo.index();
    public static final int LKUP_YES_NO = AttributesEnum.LKUP_YES_NO.index();
    public static final int LKUP_DMS_SEX = AttributesEnum.LKUP_DMS_SEX.index();
    public static final int LKUP_DMS_LANGUAGE = AttributesEnum.LKUP_DMS_LANGUAGE.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DmsUserViewRowImpl() {
    }

    /**
     * Gets DmsUser entity object.
     * @return the DmsUser
     */
    public DmsUserImpl getDmsUser() {
        return (DmsUserImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ACC using the alias name Acc.
     * @return the ACC
     */
    public String getAcc() {
        return (String) getAttributeInternal(ACC);
    }

    /**
     * Sets <code>value</code> as attribute value for ACC using the alias name Acc.
     * @param value value to set the ACC
     */
    public void setAcc(String value) {
        setAttributeInternal(ACC, value);
    }

    /**
     * Gets the attribute value for PWD using the alias name Pwd.
     * @return the PWD
     */
    public String getPwd() {
        return (String) getAttributeInternal(PWD);
    }

    /**
     * Sets <code>value</code> as attribute value for PWD using the alias name Pwd.
     * @param value value to set the PWD
     */
    public void setPwd(String value) {
        setAttributeInternal(PWD, value);
    }

    /**
     * Gets the attribute value for LOCK_FLAG using the alias name LockFlag.
     * @return the LOCK_FLAG
     */
    public String getLockFlag() {
        return (String) getAttributeInternal(LOCKFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCK_FLAG using the alias name LockFlag.
     * @param value value to set the LOCK_FLAG
     */
    public void setLockFlag(String value) {
        setAttributeInternal(LOCKFLAG, value);
    }

    /**
     * Gets the attribute value for ENABLE_FLAG using the alias name EnableFlag.
     * @return the ENABLE_FLAG
     */
    public String getEnableFlag() {
        return (String) getAttributeInternal(ENABLEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ENABLE_FLAG using the alias name EnableFlag.
     * @param value value to set the ENABLE_FLAG
     */
    public void setEnableFlag(String value) {
        setAttributeInternal(ENABLEFLAG, value);
    }

    /**
     * Gets the attribute value for RETRY_COUNT using the alias name RetryCount.
     * @return the RETRY_COUNT
     */
    public Number getRetryCount() {
        return (Number) getAttributeInternal(RETRYCOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for RETRY_COUNT using the alias name RetryCount.
     * @param value value to set the RETRY_COUNT
     */
    public void setRetryCount(Number value) {
        setAttributeInternal(RETRYCOUNT, value);
    }

    /**
     * Gets the attribute value for LOCK_TIME using the alias name LockTime.
     * @return the LOCK_TIME
     */
    public Date getLockTime() {
        return (Date) getAttributeInternal(LOCKTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCK_TIME using the alias name LockTime.
     * @param value value to set the LOCK_TIME
     */
    public void setLockTime(Date value) {
        setAttributeInternal(LOCKTIME, value);
    }

    /**
     * Gets the attribute value for UPDATED_AT using the alias name UpdatedAt.
     * @return the UPDATED_AT
     */
    public Date getUpdatedAt() {
        return (Date) getAttributeInternal(UPDATEDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_AT using the alias name UpdatedAt.
     * @param value value to set the UPDATED_AT
     */
    public void setUpdatedAt(Date value) {
        setAttributeInternal(UPDATEDAT, value);
    }

    /**
     * Gets the attribute value for CREATED_AT using the alias name CreatedAt.
     * @return the CREATED_AT
     */
    public Date getCreatedAt() {
        return (Date) getAttributeInternal(CREATEDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_AT using the alias name CreatedAt.
     * @param value value to set the CREATED_AT
     */
    public void setCreatedAt(Date value) {
        setAttributeInternal(CREATEDAT, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @return the UPDATED_BY
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @param value value to set the UPDATED_BY
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for SEX using the alias name Sex.
     * @return the SEX
     */
    public String getSex() {
        return (String) getAttributeInternal(SEX);
    }

    /**
     * Sets <code>value</code> as attribute value for SEX using the alias name Sex.
     * @param value value to set the SEX
     */
    public void setSex(String value) {
        setAttributeInternal(SEX, value);
    }

    /**
     * Gets the attribute value for MAIL using the alias name Mail.
     * @return the MAIL
     */
    public String getMail() {
        return (String) getAttributeInternal(MAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for MAIL using the alias name Mail.
     * @param value value to set the MAIL
     */
    public void setMail(String value) {
        setAttributeInternal(MAIL, value);
    }

    /**
     * Gets the attribute value for LOCALE using the alias name Locale.
     * @return the LOCALE
     */
    public String getLocale() {
        return (String) getAttributeInternal(LOCALE);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCALE using the alias name Locale.
     * @param value value to set the LOCALE
     */
    public void setLocale(String value) {
        setAttributeInternal(LOCALE, value);
    }

    /**
     * Gets the attribute value for PHONE using the alias name Phone.
     * @return the PHONE
     */
    public String getPhone() {
        return (String) getAttributeInternal(PHONE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE using the alias name Phone.
     * @param value value to set the PHONE
     */
    public void setPhone(String value) {
        setAttributeInternal(PHONE, value);
    }

    /**
     * Gets the attribute value for OTHER_INFO using the alias name OtherInfo.
     * @return the OTHER_INFO
     */
    public String getOtherInfo() {
        return (String) getAttributeInternal(OTHERINFO);
    }

    /**
     * Sets <code>value</code> as attribute value for OTHER_INFO using the alias name OtherInfo.
     * @param value value to set the OTHER_INFO
     */
    public void setOtherInfo(String value) {
        setAttributeInternal(OTHERINFO, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LKUP_YES_NO.
     */
    public RowSet getLKUP_YES_NO() {
        return (RowSet)getAttributeInternal(LKUP_YES_NO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LKUP_DMS_SEX.
     */
    public RowSet getLKUP_DMS_SEX() {
        return (RowSet)getAttributeInternal(LKUP_DMS_SEX);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LKUP_DMS_LANGUAGE.
     */
    public RowSet getLKUP_DMS_LANGUAGE() {
        return (RowSet)getAttributeInternal(LKUP_DMS_LANGUAGE);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
